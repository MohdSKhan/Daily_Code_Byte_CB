
#include<bits/stdc++.h>
using namespace std;
class node{
    public:
        int data;
        node* right;
        node* left;
        node(int d){
            data=d;
            right=NULL;
            left=NULL;
        }
};

node* createHeightBalancedBST(int* arr,int start,int end){
    if(start > end)
        return NULL;
    int mid=(start+end)/2;
    node* root=new node(arr[mid]);
    root->left=createHeightBalancedBST(arr,start,mid-1);
    root->right=createHeightBalancedBST(arr,mid+1,end);
    return root;



}

void printPreOrderTree(node* &root){
    if(root==NULL)
        return;

    cout<<root->data<<" ";
    printPreOrderTree(root->left);
    printPreOrderTree(root->right);


}

int main()
{
    int test;
    cin>>test;
    while(test--){
        int n; cin>>n; int arr[n];
        for(int i=0;i<n;i++){
            cin>>arr[i];
        }
        int start=0,end=n-1;
        node* root= createHeightBalancedBST(arr,start,end);
        printPreOrderTree(root);
    }
}
